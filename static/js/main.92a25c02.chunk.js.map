{"version":3,"sources":["Components/Provider.js","Components/Layout/Nav.js","Components/Layout/index.js","Components/Settings/WelcomeMessage/index.js","Components/Settings/ConfirmFavourites/index.js","Components/CoinGrid/CoinHeader.js","Components/CoinGrid/CoinImage.js","Components/lightTheme.js","Components/CoinGrid/Coin.js","Components/CoinGrid/CoinListings.js","Components/Layout/Loader.js","Components/Settings/Search/index.js","Components/Settings/index.js","Components/Dashboard/CoinPrice.js","Components/Dashboard/PriceGrid.js","Components/HighCharts/HighchartsConfig.js","Components/Dashboard/Chart.js","Components/HighCharts/HighchartTheme.js","Components/Dashboard/SpotlightGrid.js","Components/Dashboard/index.js","Components/App/index.js","serviceWorker.js","index.js"],"names":["TIMEUNIT","crypto","setApiKey","Context","React","createContext","Provider","props","setPage","page","setState","changeTheme","theme","isLight","document","body","style","background","color","initialLoad","cryptoDashData","JSON","parse","localStorage","getItem","favouriteCoins","pricesList","currentFav","coinsList","firstVisit","addFavourites","coin","state","length","push","isInFavourites","findIndex","el","removeFavourites","coinIndex","slice","confirmFavourites","historical","coinPriceFetch","then","response","fetchHistorical","setItem","stringify","updateCurrentFav","index","getCurrentFavCoinDetails","favCoinSelected","findFavInCoinsList","fetchCoins","a","coinList","circulatingCoins","Data","coinData","IsTrading","TotalCoinsMined","console","log","coinFetchHistorical","result","histSeries","name","Name","data","map","ticker","moment","subtract","timeInterval","valueOf","USD","promises","currSymbol","Symbol","i","priceHistorical","toDate","Promise","all","fetchPrices","priceList","priceFull","priceOfCoin","symbol","setFilteredCoins","filteredCoins","changeTimeInterval","value","this","children","Component","NavButton","styled","p","active","css","NavElement","Consumer","onClick","href","Nav","className","defaultValue","onChange","e","target","Layout","WelcomeMessage","ConfirmFavourites","CoinHeader","favouriteType","tileType","priceCoin","priceChange","CHANGEPCT24HOUR","toFixed","stylePrice","fontSize","CoinImage","image","customStyling","src","alt","height","disabledTile","Coin","type","typeClass","onClickFunction","applyDisabledStyling","lightTheme","ImageUrl","CoinsListing","coinslist","Object","keys","renderLimitedList","key","override","Loader","loading","size","onChangeHandler","coinMatches","filter","_","includes","toLowerCase","filteredCoinsList","Search","placeholder","Settings","CoinListings","favTile","CoinPrice","price","PRICE","CoinName","PriceGrid","title","text","yAxis","xAxis","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","pointStart","responsive","rules","condition","maxWidth","chartOptions","Chart","ReactHighCharts","Highcharts","setOptions","colors","chart","backgroundColor","borderWidth","plotBorderWidth","gridLineWidth","labels","lineColor","tickColor","fontWeight","fontFamily","minorTickInterval","tickWidth","tooltip","toolbar","itemStyle","line","dataLabels","marker","spline","scatter","candlestick","font","itemHoverStyle","itemHiddenStyle","credits","enabled","HighchartTheme","config","highchartconfig","SpotlightGrid","coinSpotlight","Dashboard","App","pageToRender","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92a25c02.chunk.js","sourcesContent":["import React, {Component} from \"react\"\r\nimport crypto from 'cryptocompare'\r\nimport moment from 'moment'\r\n\r\n\r\nconst TIMEUNIT = 10;\r\ncrypto.setApiKey('2a1cb16375540529ccd37a41d1374ecc415e296a3ae667c83474034d2c8f636f')\r\n\r\n// Export Context and Provider\r\nexport const Context = React.createContext();\r\n\r\nexport class Provider extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tpage: 'Dashboard',\r\n\t\t\tsetPage: this.setPage, \r\n\t\t\tconfirmFavourites: this.confirmFavourites,\r\n\t\t\tcoinsList: null,\r\n\t\t\tfavouriteCoins: [],\r\n\t\t\taddFavourites: this.addFavourites,\r\n\t\t\tremoveFavourites: this.removeFavourites,\r\n\t\t\tisInFavourites: this.isInFavourites,\r\n\t\t\tisLight: false,\r\n\t\t\tfilteredCoins: null,\r\n\t\t\tsetFilteredCoins: this.setFilteredCoins,\r\n\t\t\tpricesList: null,\r\n\t\t\ttimeInterval: 'months',\r\n\t\t\tupdateCurrentFav: this.updateCurrentFav,\r\n\t\t\tgetCurrentFavCoinDetails: this.getCurrentFavCoinDetails,\r\n\t\t\tchangeTimeInterval: this.changeTimeInterval,\r\n\t\t\tchangeTheme: this.changeTheme,\r\n\t\t\t...this.initialLoad(),\r\n\t\t}\r\n\t}\r\n\t\r\n\tsetPage = (page) => {\r\n\t\tthis.setState({\r\n\t\t\tpage\r\n\t\t})\r\n\t}\r\n\r\n\tchangeTheme = (theme) => {\r\n\t\tthis.setState({\r\n\t\t\tisLight: theme === 'light' ? true : false\r\n\t\t}, () => {\r\n\t\t\tif(theme === 'light'){\r\n\t\t\t\tdocument.body.style.background = '#e1eaee';\r\n\t\t\t\tdocument.body.style.color = '#061a44'\r\n\t\t\t} else {\r\n\t\t\t\tdocument.body.style.background = '#010e2c';\r\n\t\t\t\tdocument.body.style.color = 'white'\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tinitialLoad = () => {\r\n\t\tlet cryptoDashData = JSON.parse(localStorage.getItem('cryptodash'));\r\n\t\tif(!cryptoDashData){\r\n\t\t\treturn {\r\n\t\t\t\tpage: 'Settings',\r\n\t\t\t\tfirstVisit: true\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tfavouriteCoins: cryptoDashData.favouriteCoins,\r\n\t\t\tpricesList: cryptoDashData.pricesList,\r\n\t\t\tcurrentFav: cryptoDashData.currentFav,\r\n\t\t\tcoinsList: cryptoDashData.coinsList\r\n\t\t}\r\n\t}\r\n\r\n\taddFavourites = (coin) => {\r\n\t\tlet favouriteCoins = [...this.state.favouriteCoins];\r\n\t\tlet MAX_FAV_COINLIST = 10\r\n\t\tif(favouriteCoins.length < MAX_FAV_COINLIST){\r\n\t\t\tfavouriteCoins.push(coin);\r\n\t\t\tthis.setState({\r\n\t\t\t\tfavouriteCoins\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tisInFavourites = (coin) => {\r\n\t\tlet favouriteCoins = [...this.state.favouriteCoins];\r\n\t\tlet coinMatch = favouriteCoins.findIndex((el) => {\r\n\t\t\treturn el === coin\r\n\t\t})\r\n\r\n\t\tif(coinMatch !== -1) return true;\r\n\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\r\n\tremoveFavourites = (coin) => {\r\n\t\tlet favouriteCoins = [...this.state.favouriteCoins];\r\n\t\tif(favouriteCoins.length > 0){\r\n\t\t\tlet coinIndex = favouriteCoins.findIndex((el) => {\r\n\t\t\t\treturn el === coin\r\n\t\t\t});\r\n\t\t\tfavouriteCoins = [...this.state.favouriteCoins.slice(0, coinIndex), ...this.state.favouriteCoins.slice(coinIndex+1, this.state.favouriteCoins.length)]\r\n\t\t\tthis.setState({\r\n\t\t\t\tfavouriteCoins\r\n\t\t\t}, () => {\r\n\t\t\t})\r\n\t\t\t/* Another way to remove an element from an array */\r\n\r\n\t\t\t// favouriteCoins = favouriteCoins.filter((el) => {\r\n\t\t\t// \treturn el !== coin\r\n\t\t\t// })\r\n\t\t}\r\n\t}\r\n\r\n\tconfirmFavourites = () => {\r\n\t\tthis.setState({\r\n\t\t\tpage: 'Dashboard',\r\n\t\t\tfirstVisit: false,\r\n\t\t\tcurrentFav: 0, \r\n\t\t\thistorical: null, \r\n\t\t\tpricesList: null\r\n\t\t}, () => {\r\n\t\t\tthis.coinPriceFetch().then(response => {\r\n\t\t\t\tthis.fetchHistorical();\r\n\t\t\t\tlocalStorage.setItem('cryptodash', JSON.stringify({\r\n\t\t\t\t\tcoinsList: this.state.coinsList,\r\n\t\t\t\t\tfavouriteCoins: this.state.favouriteCoins,\r\n\t\t\t\t\tcurrentFav: this.state.currentFav,\r\n\t\t\t\t\tpricesList: this.state.pricesList\r\n\t\t\t\t}))\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n\r\n\tupdateCurrentFav = (index) => {\r\n\t\tthis.setState({\r\n\t\t\tcurrentFav: index,\r\n\t\t\thistorical: null\r\n\t\t}, () => {\r\n\t\t\tthis.fetchHistorical();\r\n\t\t\tlocalStorage.setItem('cryptodash', JSON.stringify({\r\n\t\t\t\tcoinsList: this.state.coinsList,\r\n\t\t\t\tfavouriteCoins: this.state.favouriteCoins,\r\n\t\t\t\tcurrentFav: this.state.currentFav,\r\n\t\t\t\tpricesList: this.state.pricesList\r\n\t\t\t}))\r\n\t\t})\r\n\t}\r\n\r\n\tgetCurrentFavCoinDetails = () => {\r\n\t\tif(this.state.pricesList){\r\n\t\t\tlet pricesList = [...this.state.pricesList];\r\n\t\t\tlet coinsList = this.state.coinsList;\r\n\t\t\tlet favCoinSelected = pricesList[this.state.currentFav];\r\n\t\t\tlet findFavInCoinsList = null;\r\n\t\t\tfor(let coin in coinsList){\r\n\t\t\t\tif(coinsList[coin][\"Symbol\"] === favCoinSelected['symbol']){\r\n\t\t\t\t\tfindFavInCoinsList = coinsList[coin]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn findFavInCoinsList\r\n\t\t}\r\n\t}\r\n\r\n\tfetchCoins = async () => {\r\n\t\tconst response = await crypto.coinList()\r\n\t\tlet circulatingCoins = {};\r\n\t\tfor(let coin in response.Data){\r\n\t\t\tlet coinData = response.Data[coin];\r\n\t\t\tif(coinData.IsTrading && coinData.TotalCoinsMined && coinData.TotalCoinsMined > 0){\r\n\t\t\t\tcirculatingCoins[coin] = coinData;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconsole.log(circulatingCoins)\r\n\r\n\t\tthis.setState({\r\n\t\t\tcoinsList: circulatingCoins\r\n\t\t}, () => {\r\n\t\t\tlocalStorage.setItem('cryptodash', JSON.stringify({\r\n\t\t\t\tcoinsList: this.state.coinsList,\r\n\t\t\t\tfavouriteCoins: this.state.favouriteCoins,\r\n\t\t\t\tcurrentFav: this.state.currentFav,\r\n\t\t\t\tpricesList: this.state.pricesList\r\n\r\n\t\t\t}))\r\n\t\t})\r\n\t}\r\n\r\n\tfetchHistorical = async () => {\r\n\t\tlet result = await this.coinFetchHistorical();\r\n\t\tlet histSeries = [{\r\n\t\t\tname: this.getCurrentFavCoinDetails().Name,\r\n\t\t\tdata: result.map((ticker, index) => [\r\n\t\t\t\tmoment().subtract({[this.state.timeInterval]: TIMEUNIT-index}).valueOf(),\r\n\t\t\t\tticker.USD\r\n\t\t\t])\r\n\t\t}]\r\n\r\n\t\tconsole.log(result)\r\n\t\tconsole.log(histSeries[0])\r\n\r\n\t\tthis.setState({\r\n\t\t\thistorical: histSeries\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tcoinFetchHistorical = () => {\r\n\t\tlet promises = [];\r\n\t\tlet currSymbol = this.getCurrentFavCoinDetails().Symbol;\r\n\t\tfor(let i=TIMEUNIT; i>0; i--){\r\n\t\t\tlet data = crypto.priceHistorical(currSymbol, ['USD'], moment().subtract({[this.state.timeInterval]: i}).toDate())\r\n\t\t\tpromises.push(data)\r\n\t\t}\r\n\r\n\t\treturn Promise.all(promises)\r\n\t}\r\n\r\n\tcoinPriceFetch = async () => {\r\n\t\tlet pricesList = await this.fetchPrices();\r\n\t\t// pricesList = pricesList.filter(price => Object.keys(price).length);\r\n\t\t\r\n\t\tthis.setState({pricesList})\r\n\t}\r\n\r\n\tfetchPrices = async () => {\r\n\t\tif(this.state.firstVisit) return;\r\n\t\tlet priceList = [];\r\n\t\t\r\n\t\tif(this.state.favouriteCoins.length){\r\n\t\t\tlet priceOfCoin = await crypto.priceFull(this.state.favouriteCoins, ['USD'])\r\n\t\t\tconsole.log(this.state.favouriteCoins)\r\n\t\t\tconsole.log(priceOfCoin)\r\n\t\t\tfor(let coin in priceOfCoin){\r\n\t\t\t\tpriceList.push({\r\n\t\t\t\t\tsymbol: coin, \r\n\t\t\t\t\t...priceOfCoin[coin]\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\treturn priceList\r\n\t\t\r\n\t}\r\n\r\n\tsetFilteredCoins = (filteredCoins) => {\r\n\t\tthis.setState({\r\n\t\t\tfilteredCoins\r\n\t\t})\r\n\t}\r\n\r\n\tchangeTimeInterval = (value) => {\r\n\t\tconsole.log(value)\r\n\t\tthis.setState({\r\n\t\t\ttimeInterval: value,\r\n\t\t\thistorical: null\r\n\t\t}, () => {\r\n\t\t\tthis.fetchHistorical()\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.fetchCoins();\r\n\t\tthis.fetchPrices();\r\n\t\tif(this.state.pricesList){\r\n\t\t\tthis.fetchHistorical();\r\n\t\t}\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<Context.Provider value={this.state}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</Context.Provider>\r\n\t\t)\r\n\t}\r\n}","import React from \"react\"\r\nimport styled, {css} from 'styled-components'\r\nimport {Context} from '../Provider'\r\n\r\nconst NavButton = styled.p`\r\n\t${props => props.active && css`\r\n\t\tcolor: white;\r\n\t\ttext-shadow: 0px 0px 25px #03ff03;\r\n\t`}\r\n`;\r\n\r\n\r\n\r\nconst NavElement = (props) => {\r\n\treturn (\r\n\t\t<Context.Consumer>\r\n\t\t\t{(value => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<NavButton active={value.page === props.name} onClick={() => value.setPage(props.name)}>\r\n\t\t\t\t\t\t\t<a href=\"#\">{props.name}</a>\r\n\t\t\t\t\t\t</NavButton>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t)}\r\n\t\t</Context.Consumer>\r\n\t)\r\n}\r\n\r\n\r\nconst Nav = () => {\r\n\treturn (\r\n\t\t<nav className=\"page-layout__nav\">\r\n\t\t\t<h1 className=\"page-layout__nav--logo\"><a href=\"#\">CryptoDash</a></h1>\r\n\t\t\t<NavElement name=\"Settings\"/>\r\n\t\t\t<NavElement name=\"Dashboard\"/>\r\n\t\t\t<Context.Consumer>\r\n\t\t\t{(({changeTheme}) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<select defaultValue=\"dark\" onChange={e => changeTheme(e.target.value)}>\r\n\t\t\t\t\t\t\t<option value=\"dark\">Dark</option>\r\n\t\t\t\t\t\t\t<option value=\"light\">Light</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t)}\r\n\t\t\t</Context.Consumer>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\n\r\nexport default Nav;","import React from 'react';\r\nimport Nav from \"./Nav\"\r\n\r\n\r\nconst Layout = (props) => {\r\n\treturn (\r\n\t\t<div className=\"page-layout\">\r\n\t\t\t<Nav />\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Layout","import React from \"react\";\r\nimport {Context} from \"../../Provider\"\r\n\r\nconst WelcomeMessage = () => {\r\n\treturn (\r\n\t\t<Context.Consumer>\r\n\t\t{(({firstVisit, favouriteCoins}) => {\r\n\t\t\t\t{ return firstVisit || !favouriteCoins.length ? \r\n\t\t\t\t\t<h1 className=\"sub-heading\">Welcome to Cryptodash. Please choose your favourite cryptocurrency</h1> : null\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)}\r\n\t\t</Context.Consumer>\r\n\t)\r\n}\r\nexport default WelcomeMessage;","import React from \"react\"\r\nimport {Context} from \"../../Provider\"\r\n\r\nconst ConfirmFavourites = () => {\r\n\treturn (\r\n\t\t<Context.Consumer>\r\n\t\t{(({confirmFavourites}) => {\r\n\t\t\t\treturn <button \r\n\t\t\t\t\tclassName=\"button settings__button\"\r\n\t\t\t\t\tonClick={confirmFavourites}\r\n\t\t\t\t>Confirm Favourites</button>\r\n\t\t\t}\r\n\t\t)}\r\n\t\t</Context.Consumer>\r\n\t)\r\n}\r\n\r\nexport default ConfirmFavourites;","import React from \"react\"\r\n\r\nconst CoinHeader = ({name, symbol, favouriteType, tileType, priceCoin}) => {\r\n\tlet priceChange = priceCoin ? priceCoin.USD.CHANGEPCT24HOUR.toFixed(4) : null;\r\n\tlet stylePrice = {\r\n\t\tcolor: priceChange ? (priceChange > 0 ? 'green' : 'red') : null,\r\n\t\tfontSize: '1.2rem'\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"coins__coinsgrid--coin__header\">\r\n\t\t{tileType !== 'priceTile' ? (\r\n\t\t\t<>\r\n\t\t\t\t<p>{name}</p>\r\n\t\t\t\t<p style={{'display': favouriteType ? 'none' : 'block'}}>{favouriteType ? 'X' : symbol}</p>\r\n\t\t\t</>\r\n\t\t) : (\r\n\t\t\t<>\r\n\t\t\t\t<p>{priceCoin.symbol}</p>\r\n\t\t\t\t<p style={stylePrice}>{priceChange}%</p>\r\n\t\t\t</>\r\n\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CoinHeader","import React from \"react\"\r\n\r\nconst CoinImage = ({image, symbol, customStyling}) => {\r\n\treturn (\r\n\t\t<img src={`http://cryptocompare.com/${image}`} alt={symbol} style={customStyling || {height: '50px'}} />\r\n\t)\r\n}\r\n\r\nexport default CoinImage","export default function(isLight){\r\n\tif(isLight){\r\n\t\treturn {\r\n\t\t\t'background': 'white'\r\n\t\t}\r\n\t}\r\n\treturn null\r\n}","import React from \"react\"\r\nimport CoinHeader from \"./CoinHeader\"\r\nimport CoinImage from \"./CoinImage\"\r\nimport lightTheme from \"../lightTheme\"\r\n\r\nconst disabledTile = {\r\n\t\"pointerEvents\": 'none',\r\n\t\"opacity\": 0.4,\r\n\r\n}\r\n\r\nconst Coin = ({coin, type, addFavourites, removeFavourites, isInFavourites, isLight}) => {\r\n\tconsole.log(isLight)\r\n\tlet typeClass = type ? `coins__coinsgrid--coin__${type}` : \"c\";\r\n\tlet onClickFunction = type ? removeFavourites : addFavourites;\r\n\tlet applyDisabledStyling = !type ? (isInFavourites(coin.Name) ? {...disabledTile, ...lightTheme(isLight)} : lightTheme(isLight)) : lightTheme(isLight);\r\n\treturn (\r\n\t\t<div className={`coins__coinsgrid--coin ${typeClass}`} onClick={e => onClickFunction(coin.Name)} style={applyDisabledStyling}>\r\n\t\t\t<CoinHeader name={coin.Name} symbol={coin[\"Symbol\"]} favouriteType={type ? true : false}/>\r\n\t\t\t<CoinImage image={coin.ImageUrl} symbol={coin.Symbol}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Coin","import React from \"react\"\r\nimport {Context} from \"../Provider\"\r\nimport Coin from \"./Coin\"\r\n\r\nconst renderLimitedList = (coinslist, type, favouriteCoins, filteredCoins) => {\r\n\treturn type ? favouriteCoins : (filteredCoins !== null ? (filteredCoins.length >= 50 ? filteredCoins.slice(0, 50) : filteredCoins) : Object.keys(coinslist).slice(0, 50))\r\n}\r\n\r\nconst CoinsListing = ({type}) => {\r\n\treturn (\r\n\t\t<Context.Consumer>\r\n\t\t{(({coinsList, favouriteCoins, addFavourites, removeFavourites, isInFavourites, filteredCoins, isLight}) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"coins__coinsgrid\">\r\n\t\t\t\t\t\t{ renderLimitedList(coinsList, type, favouriteCoins, filteredCoins).map(coin => {\r\n\t\t\t\t\t\t\treturn <Coin \r\n\t\t\t\t\t\t\t\t\t\tkey={coin} \r\n\t\t\t\t\t\t\t\t\t\tcoin={coinsList[coin]} \r\n\t\t\t\t\t\t\t\t\t\ttype={type ? type : false} \r\n\t\t\t\t\t\t\t\t\t\taddFavourites={addFavourites} \r\n\t\t\t\t\t\t\t\t\t\tremoveFavourites={removeFavourites}  \r\n\t\t\t\t\t\t\t\t\t\tisInFavourites={isInFavourites}\r\n\t\t\t\t\t\t\t\t\t\tisLight={isLight}/>\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t)}\r\n\t\t</Context.Consumer>\r\n\t)\r\n}\r\n\r\nexport default CoinsListing","import React from \"react\"\r\nimport {BounceLoader} from \"react-spinners\"\r\nimport {Context} from \"../Provider\"\r\nimport {css} from 'styled-components'\r\n\r\nconst override = css`\r\n\tdisplay: block;\r\n\tjustify-self: center;\r\n\tmargin-top: 2rem\r\n`\r\n\r\nconst Loader = (props) => {\r\n\treturn (\r\n\t\t<Context.Consumer>\r\n\t\t\t{(({coinsList, pricesList, firstVisit, favouriteCoins}) => {\r\n\t\t\t\t\tif(props.page === \"Settings\"){\r\n\t\t\t\t\t\tif(coinsList){\r\n\t\t\t\t\t\t\treturn props.children\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn <BounceLoader loading={true} size={70} color={'#123abc'} css={override} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(props.page === \"Dashboard\"){\r\n\t\t\t\t\t\tif(!favouriteCoins.length) return <p className=\"h2\">You don't have any favourite coins. Please go to settings and choose favourites</p>\r\n\t\t\t\t\t\tif(pricesList && !firstVisit){\r\n\t\t\t\t\t\t\treturn props.children\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn <p>Loading prices</p>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)}\r\n\t\t</Context.Consumer>\r\n\t)\r\n}\r\n\r\nexport default Loader;","import React from 'react'\r\nimport {Context} from \"../../Provider\"\r\nimport _ from 'lodash'\r\nimport lightTheme from \"../../lightTheme\"\r\n\r\nconst filteredCoinsList = (value, coinsList, setFilteredCoins) => {\r\n\t// Get all the coin symbols\r\n\tlet coinSymbols = Object.keys(coinsList);\r\n\t// Get all the coin names\r\n\tlet coinNames = coinSymbols.map((symbol) => {\r\n\t\treturn coinsList[symbol]\r\n\t})\r\n\r\n\tlet coinMatches = coinNames.filter((coin) => {\r\n\t\treturn _.includes(coin[\"CoinName\"].toLowerCase(), value.toLowerCase())\r\n\t}).map((coin) => {\r\n\t\treturn coin.Symbol\r\n\t})\r\n\r\n\tconsole.log(coinMatches)\r\n\tsetFilteredCoins(coinMatches)\r\n}\r\n\r\nconst onChangeHandler = (e, coinsList, setFilteredCoins) => {\r\n\tlet {value} = e.target;\r\n\tfilteredCoinsList(value, coinsList, setFilteredCoins)\r\n}\r\n\r\nconst Search = () => {\r\n\treturn (\r\n\t\t<Context.Consumer>\r\n\t\t{({coinsList, setFilteredCoins, isLight}) => {\r\n\t\t\tconsole.log(coinsList)\r\n\t\t\tlet style = {\r\n\t\t\t\t...lightTheme(isLight),\r\n\t\t\t\tcolor: '#061a44'\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"settings__search\">\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\tSearch for a coin\r\n\t\t\t\t\t\t<input type=\"text\" name=\"coin__input\" placeholder=\"Search coin\" onChange={e => onChangeHandler(e, coinsList, setFilteredCoins)} style={style}/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\t</Context.Consumer>\r\n\t)\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\nimport WelcomeMesaage from \"./WelcomeMessage\"\r\nimport ConfirmFavourites from \"./ConfirmFavourites\"\r\nimport CoinListings from \"../CoinGrid/CoinListings\"\r\nimport Loader from \"../Layout/Loader\"\r\nimport Search from \"./Search\"\r\n\r\nimport {Context} from \"../Provider\"\r\n\r\nconst Settings = ({page}) => {\r\n\treturn (\r\n\t\t<Loader page={page}>\r\n\t\t\t<CoinListings type={'favouriteType'} />\r\n\t\t\t<WelcomeMesaage />\r\n\t\t\t<ConfirmFavourites />\r\n\t\t\t<Search />\r\n\t\t\t<CoinListings />\r\n\t\t</Loader>\r\n\t)\r\n}\r\n\r\nexport default Settings","import React from \"react\"\r\nimport CoinHeader from \"../CoinGrid/CoinHeader\"\r\nimport lightTheme from \"../lightTheme\"\r\n\r\nconst favTile = {\r\n\t\"boxShadow\": \"0px 0px 4px 1px #03ff03\",\r\n\t\"pointerEvents\": 'none'\r\n}\r\n\r\nconst CoinPrice = ({coin, type, index, currentFav, updateCurrentFav, isLight}) => {\r\n\tlet price = coin.USD.PRICE;\r\n\tprice = price >=1 ? price.toFixed(2) : price.toFixed(5);\r\n\treturn (\r\n\t\t<div className={`coins__coinsgrid--coin ${index+1 > 5 ? 'compact-coinTile' : ''}`} style={currentFav ? {...favTile, ...lightTheme(isLight)} : lightTheme(isLight)} onClick={e => updateCurrentFav(index)} >\r\n\t\t\t<CoinHeader tileType=\"priceTile\" name={coin.CoinName} symbol={coin[\"Symbol\"]} priceCoin={coin} favouriteType={type ? true : false}/>\r\n\t\t\t<h3>${price}</h3>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CoinPrice","import React from \"react\"\r\nimport {Context} from \"../Provider\"\r\nimport CoinPrice from \"./CoinPrice\"\r\n\r\nconst PriceGrid = () => {\r\n\treturn (\r\n\t\t<Context.Consumer>\r\n\t\t\t{(({pricesList, currentFav, updateCurrentFav, isLight}) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"coins__coinsgrid price-grid\" >\r\n\t\t\t\t\t\t{pricesList.map((coin, index) => {\r\n\t\t\t\t \t\t\treturn (\r\n\t\t\t\t \t\t\t\t<CoinPrice \r\n\t\t\t\t \t\t\t\t\tkey={coin.symbol} \r\n\t\t\t\t \t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t\tcoin={coin} \r\n\t\t\t\t\t\t\t\t\tupdateCurrentFav={updateCurrentFav}\r\n\t\t\t\t\t\t\t\t\tcurrentFav={index === currentFav}\r\n\t\t\t\t\t\t\t\t\tisLight={isLight}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t \t})\r\n\t\t\t\t\t }\r\n\t\t\t\t \t</div>\r\n\t\t\t\t )\r\n\t\t\t\t}\r\n\t\t\t)}\r\n\t\t</Context.Consumer>\r\n\t)\r\n}\r\n\r\nexport default PriceGrid","export default function(historical){\r\n\treturn {\r\n\t    title: {\r\n\t        text: ''\r\n\t    },\r\n\t    yAxis: {\r\n\t        title: {\r\n\t            text: 'Prices'\r\n\t        }\r\n\t    },\r\n\t    xAxis: {\r\n\t    \ttype:'datetime'\r\n\t    },\r\n\t    legend: {\r\n\t        layout: 'vertical',\r\n\t        align: 'right',\r\n\t        verticalAlign: 'middle'\r\n\t    },\r\n\r\n\t    plotOptions: {\r\n\t        series: {\r\n\t            label: {\r\n\t                connectorAllowed: false\r\n\t            },\r\n\t            pointStart: 2010\r\n\t        }\r\n\t    },\r\n\r\n\t    series: historical,\r\n\r\n\t    responsive: {\r\n\t        rules: [{\r\n\t            condition: {\r\n\t                maxWidth: 500\r\n\t            },\r\n\t            chartOptions: {\r\n\t                legend: {\r\n\t                    layout: 'horizontal',\r\n\t                    align: 'center',\r\n\t                    verticalAlign: 'bottom'\r\n\t                }\r\n\t            }\r\n\t        }]\r\n\t    }\r\n\r\n\t}\r\n\r\n};","import React from \"react\"\r\nimport {Context} from \"../Provider\"\r\nimport highchartconfig from \"../HighCharts/HighchartsConfig\"\r\nimport ReactHighCharts from \"react-highcharts\"\r\nimport HighchartTheme from \"../HighCharts/HighchartTheme\"\r\nimport lightTheme from \"../lightTheme\"\r\n\r\n\r\nconst Chart = ({isLight}) => {\r\n\tReactHighCharts.Highcharts.setOptions(HighchartTheme(isLight))\r\n\t\r\n\treturn (\r\n\t\t<Context.Consumer>\r\n\t\t\t{({historical, changeTimeInterval}) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"dashboard__chart\" style={lightTheme(isLight)}>\r\n\t\t\t\t\t\t<select defaultValue=\"months\" onChange={e => changeTimeInterval(e.target.value)}>\r\n\t\t\t\t\t\t\t<option value=\"days\">Days</option>\r\n\t\t\t\t\t\t\t<option value=\"weeks\">Weeks</option>\r\n\t\t\t\t\t\t\t<option value=\"months\">Months</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t<ReactHighCharts config={highchartconfig(historical)}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\r\n\t\t\t}}\r\n\t\t</Context.Consumer>\r\n\t)\r\n}\r\n\r\nexport default Chart","export default function(isLight){\r\n    console.log(isLight)\r\n    return {\r\n        colors: ['#55BF3B', '#DF5353', '#7798BF', '#aaeeee',\r\n            '#ff0066', '#eeaaee', '#55BF3B', '#DF5353', '#7798BF', '#aaeeee'],\r\n        chart: {\r\n            backgroundColor: isLight ? 'white' : '#061a44',\r\n            borderWidth: 0,\r\n            className: 'dark-container',\r\n            plotBorderWidth: 0\r\n        },\r\n        xAxis: {\r\n            gridLineWidth: 0,\r\n            labels: {\r\n                style: {\r\n                    color: isLight ? 'black' : '#A0A0A0'\r\n                }\r\n            },\r\n            lineColor: isLight ? 'black' : '#A0A0A0',\r\n            tickColor: isLight ? 'black' : '#A0A0A0',\r\n            title: {\r\n                style: {\r\n                    color: isLight ? 'black' : '#CCC',\r\n                    fontWeight: 'bold',\r\n                    fontSize: '12px',\r\n                    fontFamily: 'Trebuchet MS, Verdana, sans-serif'\r\n                }\r\n            }\r\n        },\r\n        yAxis: {\r\n            gridLineWidth: 0,\r\n            labels: {\r\n                style: {\r\n                    color: isLight ? 'black' : '#A0A0A0'\r\n                }\r\n            },\r\n            lineColor: isLight ? 'black' : '#A0A0A0',\r\n            minorTickInterval: null,\r\n            tickColor: isLight ? 'black' : '#A0A0A0',\r\n            tickWidth: 1,\r\n            title: {\r\n                style: {\r\n                    color: isLight ? 'black' : '#CCC',\r\n                    fontWeight: 'bold',\r\n                    fontSize: '12px',\r\n                    fontFamily: 'Trebuchet MS, Verdana, sans-serif'\r\n                }\r\n            }\r\n        },\r\n        tooltip: {\r\n            backgroundColor: isLight ? 'black' : 'rgba(0, 0, 0, 0.75)',\r\n            style: {\r\n                color: isLight ? 'white' : '#F0F0F0'\r\n            }\r\n        },\r\n        toolbar: {\r\n            itemStyle: {\r\n                color: isLight ? 'black' : 'silver'\r\n            }\r\n        },\r\n        plotOptions: {\r\n            line: {\r\n                dataLabels: {\r\n                    color: '#CCC'\r\n                },\r\n                marker: {\r\n                    lineColor: '#333'\r\n                }\r\n            },\r\n            spline: {\r\n                marker: {\r\n                    lineColor: '#333'\r\n                }\r\n            },\r\n            scatter: {\r\n                marker: {\r\n                    lineColor: '#333'\r\n                }\r\n            },\r\n            candlestick: {\r\n                lineColor: 'white'\r\n            }\r\n        },\r\n        legend: {\r\n            backgroundColor: isLight ? 'black' : 'rgba(0, 0, 0, 0.5)',\r\n            itemStyle: {\r\n                font: '9pt Trebuchet MS, Verdana, sans-serif',\r\n                color: isLight ? 'white' : '#A0A0A0'\r\n            },\r\n            itemHoverStyle: {\r\n                color: isLight ? 'black' : '#FFF'\r\n            },\r\n            itemHiddenStyle: {\r\n                color: '#444'\r\n            },\r\n            title: {\r\n                style: {\r\n                    color: isLight ? 'black' : '#C0C0C0'\r\n                }\r\n            }\r\n        },\r\n        labels: {\r\n            style: {\r\n                color: '#CCC'\r\n            }\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        }\r\n\r\n    }\r\n};","import React from \"react\"\r\nimport {Context} from \"../Provider\"\r\nimport {BounceLoader} from \"react-spinners\"\r\nimport CoinImage from \"../CoinGrid/CoinImage\"\r\nimport {css} from 'styled-components'\r\nimport Chart from \"./Chart\"\r\nimport lightTheme from \"../lightTheme\"\r\n\r\nconst override = css`\r\n\tdisplay: block;\r\n\tjustify-self: center;\r\n\tmargin-top: 2rem\r\n`\r\n\r\nconst customStyling = {\r\n\theight: 'auto'\r\n}\r\n\r\n\r\n\r\nconst SpotlightGrid = () => {\r\n\treturn (\r\n\t\t<Context.Consumer>\r\n\t\t{(({getCurrentFavCoinDetails, historical, isLight}) => {\r\n\t\t\tlet coinSpotlight = getCurrentFavCoinDetails();\r\n\t\t\t{return coinSpotlight ? \r\n\t\t\t\t(\r\n\t\t\t\t\t<div className=\"dashboard__grid\">\r\n\t\t\t\t\t\t<div className=\"dashboard__spotlight-coin\" style={lightTheme(isLight)}> \r\n\t\t\t\t\t\t\t<p>{coinSpotlight.Name}</p>\r\n\t\t\t\t\t\t\t<CoinImage image={coinSpotlight.ImageUrl} symbol={coinSpotlight.Symbol} customStyling={customStyling} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{historical ? \r\n\t\t\t\t\t\t\t<Chart isLight={isLight} /> : (\r\n\t\t\t\t\t\t\t<div className=\"chart-loader\" style={lightTheme(isLight)}>\t\r\n\t\t\t\t\t\t\t\t<BounceLoader loading={true} size={70} color={'#123abc'} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t\t: <BounceLoader loading={true} size={70} color={'#123abc'} css={override} />}\r\n\r\n\t\t}\t\r\n\t\t)}\r\n\t\t</Context.Consumer>\r\n\t)\r\n}\r\n\r\nexport default SpotlightGrid","import React from \"react\";\r\nimport CoinListings from \"../CoinGrid/CoinListings\"\r\nimport Loader from \"../Layout/Loader\"\r\nimport PriceGrid from \"./PriceGrid\"\r\nimport SpotlightGrid from \"./SpotlightGrid\"\r\n\r\nconst Dashboard = ({page}) => {\r\n\treturn (\r\n\t\t<Loader page={page}>\r\n\t\t\t<PriceGrid />\r\n\t\t\t<SpotlightGrid />\r\n\t\t</Loader>\r\n\t)\r\n}\r\n\r\nexport default Dashboard","import React, {Component} from \"react\"\r\nimport {Provider, Context} from \"../Provider\"\r\n\r\nimport Layout from \"../Layout\"\r\nimport Settings from \"../Settings\"\r\nimport Dashboard from \"../Dashboard\"\r\nimport Loader from \"../Layout/Loader\"\r\n\r\nclass App extends Component {\r\n\tpageToRender = (page) => {\r\n\t\tconsole.log(page)\r\n\t\tswitch(page){\r\n\t\t\tcase 'Settings':\r\n\t\t\t\treturn <Settings page={page}/>;\r\n\t\t\tcase 'Dashboard':\r\n\t\t\t\treturn <Dashboard page={page}/>;\r\n\t\t\tdefault: \r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<Provider>\r\n\t\t\t\t<Layout>\r\n\t\t\t\t\t<Context.Consumer>\r\n\t\t\t\t\t\t{((value) => {\r\n\t\t\t\t\t\t\treturn this.pageToRender(value.page)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Context.Consumer>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Provider>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.scss';\r\nimport App from './Components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}